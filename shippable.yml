resources:
  - name: krddevdays
    type: gitRepo
    integration: GitHub
    versionTemplate:
      sourceName: krddevdays/krddevdays.ru
      buildOnCommit: true
      buildOnPullRequest: false
      buildOnPullRequestClose: false
      buildOnRelease: false
      buildOnTagPush: false
      
resources:
  - name: docker_image
    type: image
    integration: dockerHub
    versionTemplate:
      sourceName: "krddevdays/krd.dev"

jobs:
  - name: build_and_push
    type: runSh     
    steps:
      - IN: krddevdays
      - IN: docker_image
      - TASK:
          script:
            - |
              if [ "${KRDDEVDAYS_GIT_BRANCH}" == "master" ]; then
                shipctl put_resource_state_multi docker_image "versionName=latest";
              elif [[ -n $KRDDEVDAYS_GIT_TAG_NAME ]]; then
                shipctl put_resource_state_multi docker_image "versionName=${KRDDEVDAYS_GIT_TAG_NAME}";
              elif [[ -n $KRDDEVDAYS_GIT_BRANCH ]]; then
                shipctl put_resource_state_multi docker_image "versionName=${KRDDEVDAYS_GIT_BRANCH}"
              else
                exit 1
              fi
            - cd $(shipctl get_resource_state krddevdays)
            - docker build -t $CONTAINER_NAME .
            - docker login -u $DOCKER_IMAGE_INTEGRATION_USERNAME -p $DOCKER_IMAGE_INTEGRATION_TOKEN
            - docker push $(shipctl get_resource_version_key "$RES_OUT_IMG" "sourceName"):$(shipctl get_resource_version_key "$RES_OUT_IMG" "versionName")
