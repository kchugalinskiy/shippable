jobs:
  - name: build
    type: runSh
    triggerMode: serial
    allowPublicAccess: false
    runtime:
      container: false
    steps:
      - IN: krddevdays
      - OUT: container_name
      - TASK:
        - name: "generate container_name"
        - script: >
            DOCKER_IMAGE_NAME="krddevdays/krd.dev"

            if [ "$KRDDEVDAYS_GIT_BRANCH" != "master" ]; then
              CONTAINER_NAME=$DOCKER_IMAGE_NAME:latest;
            elif [[ -n $KRDDEVDAYS_GIT_TAG_NAME ]]; then
              CONTAINER_NAME=$DOCKER_IMAGE_NAME:$KRDDEVDAYS_GIT_TAG_NAME;
            elif [[ -n $KRDDEVDAYS_GIT_BRANCH ]]; then
              CONTAINER_NAME=$DOCKER_IMAGE_NAME:$KRDDEVDAYS_GIT_BRANCH;
            else
              CONTAINER_NAME=$DOCKER_IMAGE_NAME:$(echo $KRDDEVDAYS_COMMIT | awk '{ string=substr($0, 0, 7); print string; }');
            fi
            
            shipctl post_resource_state container_name CONTAINER_NAME "$CONTAINER_NAME"
      - IN: krddevdays
      - IN: container_name
      - TASK:
        - name: "build"
        - script: >
            cd $(shipctl get_resource_state krddevdays)

            sudo docker build -t "$(chipctl get_resource_state CONTAINER_NAME)" . || exit 1
